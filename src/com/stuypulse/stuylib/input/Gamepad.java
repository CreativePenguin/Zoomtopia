package com.stuypulse.stuylib.input;

import com.stuypulse.stuylib.input.LambdaButton;

/**
 * An abstract class for using gamepads with different interfaces. You can
 * implement this class in another file, and then use it with a standard
 * interface.
 * 
 * Any unimplemented buttons will never be triggered, so if a certain controller
 * is missing one, dont worry about it.
 * 
 * The button type that is used in OI.java is automatically generated by this
 * class, as long as you implement the getRaw...() function, the get...()
 * function will work.
 * 
 * This class does not come with a constructor because by itself, the class does
 * not do anything. You need to extend this class inorder to use it.
 * 
 * @author Sam (sam.belliveau@gmail.com)
 */

public class Gamepad {

    /**************************/
    /*** LEFT CONTROL STICK ***/
    /**************************/
    public double getLeftX() {
        return 0.0;
    }

    public double getLeftY() {
        return 0.0;
    }

    /***************************/
    /*** RIGHT CONTROL STICK ***/
    /***************************/
    public double getRightX() {
        return 0.0;
    }

    public double getRightY() {
        return 0.0;
    }

    /**********************/
    /*** D-PAD CONTROLS ***/
    /**********************/
    public boolean getRawDPadUp() {
        return false;
    }

    public final LambdaButton getDPadUp() {
        return new LambdaButton(() -> this.getRawDPadUp());
    }

    public boolean getRawDPadDown() {
        return false;
    }

    public final LambdaButton getDPadDown() {
        return new LambdaButton(() -> this.getRawDPadDown());
    }

    public boolean getRawDPadLeft() {
        return false;
    }

    public final LambdaButton getDPadLeft() {
        return new LambdaButton(() -> this.getRawDPadLeft());
    }

    public boolean getRawDPadRight() {
        return false;
    }

    public final LambdaButton getDPadRight() {
        return new LambdaButton(() -> this.getRawDPadRight());
    }

    /*******************/
    /*** LEFT BUMPER ***/
    /*******************/
    public boolean getRawLeftBumper() {
        return false;
    }

    public final LambdaButton getLeftBumper() {
        return new LambdaButton(() -> this.getRawLeftBumper());
    }

    /********************/
    /*** RIGHT BUMPER ***/
    /********************/
    public boolean getRawRightBumper() {
        return false;
    }

    public final LambdaButton getRightBumper() {
        return new LambdaButton(() -> this.getRawRightBumper());
    }

    /******************************/
    /*** TRIGGER AXIS THRESHOLD ***/
    /******************************/
    protected static final double TRIGGER_AXIS_THRESHOLD = 2.0 / 16.0;

    /********************/
    /*** LEFT TRIGGER ***/
    /********************/
    public double getRawLeftTriggerAxis() {
        return 0.0;
    }

    public boolean getRawLeftTrigger() {
        return getRawLeftTriggerAxis() > TRIGGER_AXIS_THRESHOLD;
    }

    public final LambdaButton getLeftTrigger() {
        return new LambdaButton(() -> this.getRawLeftTrigger());
    }

    /*********************/
    /*** RIGHT TRIGGER ***/
    /*********************/
    public double getRawRightTriggerAxis() {
        return 0;
    }

    public boolean getRawRightTrigger() {
        return getRawRightTriggerAxis() > TRIGGER_AXIS_THRESHOLD;
    }

    public final LambdaButton getRightTrigger() {
        return new LambdaButton(() -> this.getRawRightTrigger());
    }

    /*******************/
    /*** LEFT BUTTON ***/
    /*******************/
    public boolean getRawLeftButton() {
        return false;
    }

    public final LambdaButton getLeftButton() {
        return new LambdaButton(() -> this.getRawLeftButton());
    }

    /********************/
    /*** RIGHT BUTTON ***/
    /********************/
    public boolean getRawRightButton() {
        return false;
    }

    public final LambdaButton getRightButton() {
        return new LambdaButton(() -> this.getRawRightButton());
    }

    /******************/
    /*** TOP BUTTON ***/
    /******************/
    public boolean getRawTopButton() {
        return false;
    }

    public final LambdaButton getTopButton() {
        return new LambdaButton(() -> this.getRawTopButton());
    }

    /*********************/
    /*** BOTTOM BUTTON ***/
    /*********************/
    public boolean getRawBottomButton() {
        return false;
    }

    public final LambdaButton getBottomButton() {
        return new LambdaButton(() -> this.getRawBottomButton());
    }

    /*********************/
    /*** SELECT BUTTON ***/
    /*********************/
    public boolean getRawSelectButton() {
        return false;
    }

    public final LambdaButton getSelectButton() {
        return new LambdaButton(() -> this.getRawSelectButton());
    }

    /********************/
    /*** START BUTTON ***/
    /********************/
    public boolean getRawStartButton() {
        return false;
    }

    public final LambdaButton getStartButton() {
        return new LambdaButton(() -> this.getRawStartButton());
    }

    /**************************/
    /*** LEFT ANALOG BUTTON ***/
    /**************************/
    public boolean getRawLeftAnalogButton() {
        return false;
    }

    public final LambdaButton getLeftAnalogButton() {
        return new LambdaButton(() -> this.getRawLeftAnalogButton());
    }

    /***************************/
    /*** RIGHT ANALOG BUTTON ***/
    /***************************/
    public boolean getRawRightAnalogButton() {
        return false;
    }

    public final LambdaButton getRightAnalogButton() {
        return new LambdaButton(() -> this.getRawRightAnalogButton());
    }

    /*********************/
    /*** OPTION BUTTON ***/
    /*********************/
    public boolean getRawOptionButton() {
        return false;
    }

    public final LambdaButton getOptionButton() {
        return new LambdaButton(() -> this.getRawOptionButton());
    }

    /**************/
    /*** RUMBLE ***/
    /**************/
    public void setRumble(double intensity) {
    }
}
